apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-mongodb-app
  namespace: devops-microservice
  labels:
    app: springboot-mongodb-app
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: springboot-mongodb-app
  template:
    metadata:
      labels:
        app: springboot-mongodb-app
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: app-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: app
        image: YOUR_ECR_REPOSITORY_URI:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: SPRING_PROFILES_ACTIVE
        - name: SPRING_DATA_MONGODB_URI
          value: "mongodb://$(MONGO_USERNAME):$(MONGO_PASSWORD)@mongodb:27017/$(MONGO_DATABASE)?authSource=$(MONGO_AUTH_DB)"
        - name: MONGO_USERNAME
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MONGO_USERNAME
        - name: MONGO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: app-secrets
              key: MONGO_PASSWORD
        - name: MONGO_DATABASE
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_DATABASE
        - name: MONGO_AUTH_DB
          valueFrom:
            configMapKeyRef:
              name: app-config
              key: MONGO_AUTH_DB
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8080
          initialDelaySeconds: 90
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
---